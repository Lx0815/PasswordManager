<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--
        引入配置文件
    -->
    <context:property-placeholder location="JDBC.properties" file-encoding="UTF-8"/>

    <!--
        数据源配置, 使用 Druid 数据库连接池
    -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="dbType" value="sqlite"/>

        <property name="url" value="${sqlite.url}"/>
        <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
        <property name="driverClassName" value="${sqlite.driverClassName}"/>
        <property name="username" value="${sqlite.username}"/>
        <property name="password" value="${sqlite.password}"/>
        <property name="validationQuery" value="${jdbc.testSql}"/>
        <property name="testWhileIdle" value="true"/>
    </bean>

    <!--
        定义数据源
    -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!--        <property name="configLocation" value="mybatis-config.xml"/>-->
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="com.d.passwordmanager.pojo"/>
        <property name="mapperLocations" value="classpath:com/d/passwordmanager/mapper/*.xml"/>
    </bean>

    <!--
        创建 UserMapper 接口的代理对象,创建单个代理对象
    -->
<!--    <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
<!--&lt;!&ndash;        注入IusernameDao接口&ndash;&gt;-->
<!--        <property name="mapperInterface" value="com.d.passwordmanager.mapper.UserMapper"/>-->
<!--&lt;!&ndash;        注入sqlSessionFactory工厂对象&ndash;&gt;-->
<!--        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
<!--    </bean>-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.d.passwordmanager.mapper"/>
        <!--        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
    </bean>


    <!--
        事务管理
    -->
    <!-- 配置事务管理器 -->
<!--    <aop:aspectj-autoproxy proxy-target-class="true"/>-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!--配置通知-->
    <tx:advice id="update-advice">
        <!--配置事务参数-->
        <tx:attributes>
            <tx:method name="update"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="service-update" expression="execution(* com.d.passwordmanager.service.impl.*.*(..))"/>
        <aop:advisor advice-ref="update-advice" pointcut-ref="service-update"/>
    </aop:config>
</beans>
